---
# tasks to download specific version from git and compile/build debian packages for installation

- name: "set_fact: remove unneeded build deps for newer debian releases"
  set_fact:
    knxd_build_libs_dev: "{{ knxd_build_libs_dev | reject('equalto', 'libsystemd-daemon-dev') | list }}"
  when: ansible_distribution == 'Debian' and (ansible_distribution_version is version('9', '>='))

- name: "Install build tools prerequisites"
  apt:
    name: "{{ knxd_build_tools }}"

- name: "Install build library prerequisites"
  apt:
    cache_valid_time: 3600
    name: "{{ knxd_build_libs_dev }}"

- name: "Clone source into {{ knxd_src_dir | dirname }}"
  git:
    clone: true
    force: true
    update: true
    repo: "https://github.com/knxd/knxd.git"
    dest: "{{ knxd_src_dir }}"
    version: "{{ knxd_source_version }}"

# get build version from sources to create more exact find command below
# control file must exist, exit with error otherwise
- name: "Extract package version from debian control"
  command: "grep -m 1 'knxd (.*)' ./debian/changelog"
  args:
    chdir: "{{ knxd_src_dir }}"
  register: grep_version
  changed_when: false

- name: "Set package version pattern as fact"
  set_fact:
    knxd_deb_pattern: "knxd*{{ grep_version.stdout_lines[0] | regex_replace('^.*\\((.*)\\).*$', '\\1') | trim }}*.deb"

- name: "Debug output of generated knxd_deb_pattern"
  debug:
    var: knxd_deb_pattern

# check if packages are already build if build can be skipped
- name: "Check if packages are already build"
  find:
    path: "{{ knxd_src_dir | dirname }}"
    pattern: "{{ knxd_deb_pattern }}"
    recurse: false
  when: not knxd_source_force_rebuild
  register: knxd_find_debs

# workaround for debian 8 jessie with newer knxd versions
# debhelper was updated to version >=10 to allow inclusion into debian 10+
# but jessie only provided debhelper 9
# https://github.com/knxd/knxd/issues/390#issuecomment-464797589
#
# attn: this one breaks idempotency: git checkout -> change control -> git ...
- name: "Change debhelper dependency to allow build on debian jessie (knxd issue #390)"
  when: ansible_distribution == 'Debian' and (ansible_distribution_version is version('9', '<'))
        and (knxd_source_force_rebuild or knxd_find_debs.matched == 0)
  lineinfile:
    path: "{{ knxd_src_dir }}/debian/control"
    line: "\\1(>= 9)\\2"
    regexp: "^(.* debhelper )\\(.*?\\)(.*)$"
    backrefs: true

# git checkout does not preserve timestamps, therefore following build might think it needs a bootstrap first
- name: "Autoreconfigure after git checkout to allow build"
  command: "autoreconf -f -i"
  args:
    chdir: "{{ knxd_src_dir }}"
  when: knxd_source_force_rebuild or knxd_find_debs.matched == 0

- name: "Build debian packages from source"
  command: "dpkg-buildpackage -b -uc"
  args:
    chdir: "{{ knxd_src_dir }}"
  when: knxd_source_force_rebuild or knxd_find_debs.matched == 0


# install local build packages
- name: "Find newly build packages"
  find:
    path: "{{ knxd_src_dir | dirname }}"
    pattern: "{{ knxd_deb_pattern }}"
    recurse: false
  register: knxd_find_debs

- name: "Create package list for installation"
  set_fact:
    knxd_deb_list: "{{ knxd_find_debs.files | map(attribute='path') | list }}"

- name: "Check if dev package shall be installed too"
  set_fact:
    knxd_deb_list: "{{ knxd_deb_list | reject('regex', 'knxd-dev.*') | list }}"
  when: not knxd_install_dev_package

- name: "Check if debug packages shall be installed too"
  set_fact:
    knxd_deb_list: "{{ knxd_deb_list | reject('regex', 'knxd-.*dbgsym.*') | list }}"
  when: not knxd_install_debug_package

- name: "Install new knxd packages"
  apt:
    deb: "{{ item }}"
    state: present
  with_items: "{{ knxd_deb_list }}"
